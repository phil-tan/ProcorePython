{"ast":null,"code":"import React from\"react\";import{useState,useEffect}from\"react\";import{MultiSelect}from\"react-multi-select-component\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FilterDropDown=props=>{const[options,setOptions]=useState([]);const[selected,setSelected]=useState([]);const column=props.column;// useEffect(() => {\n//   const curr_options = options\n//   let options_array = props.observations.map((obs) => obs[column.name]);\n//   options_array = [...new Set(options_array)];\n//   const new_options = options_array.map((opt) => ({\n//     label: opt,\n//     value: opt,\n//   }));\n//   setOptions(new_options);\n//   console.log(\"if selected all\")\n//   console.log(selected)\n//   console.log(curr_options)\n//   if(props.obs_filtered.length===0 || new Set(selected) === new Set(curr_options)){\n//     setSelected(new_options)\n//   }\n// }, [props.observations]);\nuseEffect(()=>{props.setFilterFormSelected(column.name,selected);},[selected,options]);return/*#__PURE__*/_jsxs(\"div\",{className:\"obs-filter form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\".concat(column.name,\"-bs-select\"),children:column.label}),/*#__PURE__*/_jsx(MultiSelect,{options:options,value:selected,onChange:setSelected,labelledBy:\"Select\"})]},column.name);};export default FilterDropDown;","map":{"version":3,"names":["React","useState","useEffect","MultiSelect","jsx","_jsx","jsxs","_jsxs","FilterDropDown","props","options","setOptions","selected","setSelected","column","setFilterFormSelected","name","className","children","htmlFor","concat","label","value","onChange","labelledBy"],"sources":["C:/Users/Phil Work/Documents/Coding Projects HD/ProcorePython/frontend/src/issues/Table/toolbar/FilterDropDown.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\n\n\nconst FilterDropDown = (props) => {\n  const [options, setOptions] = useState([]);\n  const [selected, setSelected] = useState([]);\n\n  const column = props.column;\n\n  // useEffect(() => {\n  //   const curr_options = options\n  //   let options_array = props.observations.map((obs) => obs[column.name]);\n  //   options_array = [...new Set(options_array)];\n  //   const new_options = options_array.map((opt) => ({\n  //     label: opt,\n  //     value: opt,\n  //   }));\n  //   setOptions(new_options);\n  //   console.log(\"if selected all\")\n  //   console.log(selected)\n  //   console.log(curr_options)\n  //   if(props.obs_filtered.length===0 || new Set(selected) === new Set(curr_options)){\n  //     setSelected(new_options)\n  //   }\n  // }, [props.observations]);\n\n\n  useEffect(() => {\n    props.setFilterFormSelected(column.name, selected);\n  }, [selected, options]);\n\n  return (\n    <div key={column.name} className=\"obs-filter form-group\">\n      <label htmlFor={`${column.name}-bs-select`}>{column.label}</label>\n      {/* <select className='form-control' multiple id={`${column.name}-bs-select`} data-actions-box=\"true\" name={column.name}>\n      { options.map((opt) => <option value={opt}>{opt}</option>) }\n      </select> */}\n      <MultiSelect\n        options={options}\n        value={selected}\n        onChange={setSelected}\n        labelledBy=\"Select\"\n      />\n    </div>\n  );\n};\n\n\nexport default FilterDropDown\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,WAAW,KAAQ,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG3D,KAAM,CAAAC,cAAc,CAAIC,KAAK,EAAK,CAChC,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAa,MAAM,CAAGL,KAAK,CAACK,MAAM,CAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAZ,SAAS,CAAC,IAAM,CACdO,KAAK,CAACM,qBAAqB,CAACD,MAAM,CAACE,IAAI,CAAEJ,QAAQ,CAAC,CACpD,CAAC,CAAE,CAACA,QAAQ,CAAEF,OAAO,CAAC,CAAC,CAEvB,mBACEH,KAAA,QAAuBU,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACtDb,IAAA,UAAOc,OAAO,IAAAC,MAAA,CAAKN,MAAM,CAACE,IAAI,cAAa,CAAAE,QAAA,CAAEJ,MAAM,CAACO,KAAK,CAAQ,CAAC,cAIlEhB,IAAA,CAACF,WAAW,EACVO,OAAO,CAAEA,OAAQ,CACjBY,KAAK,CAAEV,QAAS,CAChBW,QAAQ,CAAEV,WAAY,CACtBW,UAAU,CAAC,QAAQ,CACpB,CAAC,GAVMV,MAAM,CAACE,IAWZ,CAAC,CAEV,CAAC,CAGD,cAAe,CAAAR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}