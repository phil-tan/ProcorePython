{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phil Work\\\\Documents\\\\Coding Projects HD\\\\ProcorePython\\\\frontend\\\\src\\\\issues\\\\Table\\\\TableRow.js\";\nimport React from \"react\";\nimport TableCell from \"./TableCell\";\n// import PhotosCell from \"./PhotosCell\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableRow = props => {\n  const photos = props.item.attachments.filter(att => att.name.endsWith(\".jpg\") || att.name.endsWith(\".jpeg\") || att.name.endsWith(\".png\"));\n  const show_photos = photos.length > 0 && props.show_photos;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: props.columns.map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n        field: col.name,\n        show_photos: show_photos,\n        item: props.item,\n        item_responses: props.item_responses,\n        item_pdf_link: props.item_pdf_link\n      }, col.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = TableRow;\nexport default TableRow;\nvar _c;\n$RefreshReg$(_c, \"TableRow\");","map":{"version":3,"names":["React","TableCell","jsxDEV","_jsxDEV","Fragment","_Fragment","TableRow","props","photos","item","attachments","filter","att","name","endsWith","show_photos","length","children","columns","map","col","field","item_responses","item_pdf_link","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Phil Work/Documents/Coding Projects HD/ProcorePython/frontend/src/issues/Table/TableRow.js"],"sourcesContent":["import React from \"react\";\nimport TableCell from \"./TableCell\";\n// import PhotosCell from \"./PhotosCell\";\n\nconst TableRow = (props) => {\n  const photos = props.item.attachments.filter(\n    (att) =>\n      att.name.endsWith(\".jpg\") ||\n      att.name.endsWith(\".jpeg\") ||\n      att.name.endsWith(\".png\")\n  );\n  const show_photos = photos.length > 0 && props.show_photos;\n\n  return (\n    <>\n      <tr\n        // style={\n        //   props.item.loading\n        //     ? {\n        //         color: \"gray\",\n        //         backgroundColor: \"whitesmoke\",\n        //         fontStyle: \"italic\",\n        //         border: \"blue\",\n        //       }\n        //     : {}\n        // }\n      >\n        {props.columns.map((col) => (\n          <TableCell\n            key={col.name}\n            field={col.name}\n            show_photos={show_photos}\n            item={props.item}\n            item_responses={props.item_responses}\n            item_pdf_link={props.item_pdf_link}\n          />\n        ))}\n      </tr>\n      {/* {show_photos ? (\n        <tr>\n          <PhotosCell\n            key={props.item.id}\n            photos={photos}\n            columns={props.columns}\n          />\n        </tr>\n      ) : (\n        <></>\n      )} */}\n    </>\n  );\n};\n\nexport default TableRow;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,MAAMC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAACC,WAAW,CAACC,MAAM,CACzCC,GAAG,IACFA,GAAG,CAACC,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,IACzBF,GAAG,CAACC,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC,IAC1BF,GAAG,CAACC,IAAI,CAACC,QAAQ,CAAC,MAAM,CAC5B,CAAC;EACD,MAAMC,WAAW,GAAGP,MAAM,CAACQ,MAAM,GAAG,CAAC,IAAIT,KAAK,CAACQ,WAAW;EAE1D,oBACEZ,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAAc,QAAA,EAYGV,KAAK,CAACW,OAAO,CAACC,GAAG,CAAEC,GAAG,iBACrBjB,OAAA,CAACF,SAAS;QAERoB,KAAK,EAAED,GAAG,CAACP,IAAK;QAChBE,WAAW,EAAEA,WAAY;QACzBN,IAAI,EAAEF,KAAK,CAACE,IAAK;QACjBa,cAAc,EAAEf,KAAK,CAACe,cAAe;QACrCC,aAAa,EAAEhB,KAAK,CAACgB;MAAc,GAL9BH,GAAG,CAACP,IAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBAYL,CAAC;AAEP,CAAC;AAACC,EAAA,GA/CItB,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}