{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SortableTable=_ref=>{let{data}=_ref;const[sortConfig,setSortConfig]=useState({key:null,direction:'ascending'});const sortedData=React.useMemo(()=>{let sortableItems=[...data];if(sortConfig!==null){sortableItems.sort((a,b)=>{if(a[sortConfig.key]<b[sortConfig.key]){return sortConfig.direction==='ascending'?-1:1;}if(a[sortConfig.key]>b[sortConfig.key]){return sortConfig.direction==='ascending'?1:-1;}return 0;});}return sortableItems;},[data,sortConfig]);const requestSort=key=>{let direction='ascending';if(sortConfig.key===key&&sortConfig.direction==='ascending'){direction='descending';}setSortConfig({key,direction});};const getClassNamesFor=key=>{if(!sortConfig){return;}return sortConfig.key===key?sortConfig.direction:undefined;};return/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(data[0]).map(key=>/*#__PURE__*/_jsx(\"th\",{onClick:()=>requestSort(key),className:getClassNamesFor(key),children:key},key))})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortedData.map((item,index)=>/*#__PURE__*/_jsx(\"tr\",{children:Object.values(item).map((value,idx)=>/*#__PURE__*/_jsx(\"td\",{children:value},idx))},index))})]});};export default SortableTable;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","SortableTable","_ref","data","sortConfig","setSortConfig","key","direction","sortedData","useMemo","sortableItems","sort","a","b","requestSort","getClassNamesFor","undefined","children","Object","keys","map","onClick","className","item","index","values","value","idx"],"sources":["C:/Users/Phil Work/Documents/Coding Projects HD/ProcorePython/frontend/src/projects/SortableTable.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SortableTable = ({ data }) => {\r\n    const [sortConfig, setSortConfig] = useState({ key: null, direction: 'ascending' });\r\n\r\n    const sortedData = React.useMemo(() => {\r\n        let sortableItems = [...data];\r\n        if (sortConfig !== null) {\r\n            sortableItems.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return sortableItems;\r\n    }, [data, sortConfig]);\r\n\r\n    const requestSort = (key) => {\r\n        let direction = 'ascending';\r\n        if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    const getClassNamesFor = (key) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === key ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    {Object.keys(data[0]).map((key) => (\r\n                        <th key={key} onClick={() => requestSort(key)} className={getClassNamesFor(key)}>\r\n                            {key}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {sortedData.map((item, index) => (\r\n                    <tr key={index}>\r\n                        {Object.values(item).map((value, idx) => (\r\n                            <td key={idx}>{value}</td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default SortableTable;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC3B,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,CAAEU,GAAG,CAAE,IAAI,CAAEC,SAAS,CAAE,WAAY,CAAC,CAAC,CAEnF,KAAM,CAAAC,UAAU,CAAGb,KAAK,CAACc,OAAO,CAAC,IAAM,CACnC,GAAI,CAAAC,aAAa,CAAG,CAAC,GAAGP,IAAI,CAAC,CAC7B,GAAIC,UAAU,GAAK,IAAI,CAAE,CACrBM,aAAa,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACzB,GAAID,CAAC,CAACR,UAAU,CAACE,GAAG,CAAC,CAAGO,CAAC,CAACT,UAAU,CAACE,GAAG,CAAC,CAAE,CACvC,MAAO,CAAAF,UAAU,CAACG,SAAS,GAAK,WAAW,CAAG,CAAC,CAAC,CAAG,CAAC,CACxD,CACA,GAAIK,CAAC,CAACR,UAAU,CAACE,GAAG,CAAC,CAAGO,CAAC,CAACT,UAAU,CAACE,GAAG,CAAC,CAAE,CACvC,MAAO,CAAAF,UAAU,CAACG,SAAS,GAAK,WAAW,CAAG,CAAC,CAAG,CAAC,CAAC,CACxD,CACA,MAAO,EAAC,CACZ,CAAC,CAAC,CACN,CACA,MAAO,CAAAG,aAAa,CACxB,CAAC,CAAE,CAACP,IAAI,CAAEC,UAAU,CAAC,CAAC,CAEtB,KAAM,CAAAU,WAAW,CAAIR,GAAG,EAAK,CACzB,GAAI,CAAAC,SAAS,CAAG,WAAW,CAC3B,GAAIH,UAAU,CAACE,GAAG,GAAKA,GAAG,EAAIF,UAAU,CAACG,SAAS,GAAK,WAAW,CAAE,CAChEA,SAAS,CAAG,YAAY,CAC5B,CACAF,aAAa,CAAC,CAAEC,GAAG,CAAEC,SAAU,CAAC,CAAC,CACrC,CAAC,CAED,KAAM,CAAAQ,gBAAgB,CAAIT,GAAG,EAAK,CAC9B,GAAI,CAACF,UAAU,CAAE,CACb,OACJ,CACA,MAAO,CAAAA,UAAU,CAACE,GAAG,GAAKA,GAAG,CAAGF,UAAU,CAACG,SAAS,CAAGS,SAAS,CACpE,CAAC,CAED,mBACIhB,KAAA,UAAAiB,QAAA,eACInB,IAAA,UAAAmB,QAAA,cACInB,IAAA,OAAAmB,QAAA,CACKC,MAAM,CAACC,IAAI,CAAChB,IAAI,CAAC,CAAC,CAAC,CAAC,CAACiB,GAAG,CAAEd,GAAG,eAC1BR,IAAA,OAAcuB,OAAO,CAAEA,CAAA,GAAMP,WAAW,CAACR,GAAG,CAAE,CAACgB,SAAS,CAAEP,gBAAgB,CAACT,GAAG,CAAE,CAAAW,QAAA,CAC3EX,GAAG,EADCA,GAEL,CACP,CAAC,CACF,CAAC,CACF,CAAC,cACRR,IAAA,UAAAmB,QAAA,CACKT,UAAU,CAACY,GAAG,CAAC,CAACG,IAAI,CAAEC,KAAK,gBACxB1B,IAAA,OAAAmB,QAAA,CACKC,MAAM,CAACO,MAAM,CAACF,IAAI,CAAC,CAACH,GAAG,CAAC,CAACM,KAAK,CAAEC,GAAG,gBAChC7B,IAAA,OAAAmB,QAAA,CAAeS,KAAK,EAAXC,GAAgB,CAC5B,CAAC,EAHGH,KAIL,CACP,CAAC,CACC,CAAC,EACL,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAvB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}