{"ast":null,"code":"import React from\"react\";import{useState,useEffect}from\"react\";import{MultiSelect}from\"react-multi-select-component\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FilterDropDown=props=>{const[options,setOptions]=useState([]);const[selected,setSelected]=useState([]);const column_name=props.column.name;useEffect(()=>{const curr_options=options;let options_array=props.items.map(item=>item[column_name]);options_array=[...new Set(options_array)];const new_options=options_array.map(opt=>({label:opt,value:opt}));setOptions(new_options);console.log(\"if selected all\");console.log(selected);console.log(curr_options);if(props.items.length===0||new Set(selected)===new Set(curr_options)){setSelected(new_options);}},[props.items]);useEffect(()=>{const selected_array=selected.map(opt=>opt.value);const filterSet={...props.filterSet};filterSet[column_name]=selected_array;props.setFilterSet(filterSet);},[selected]);return/*#__PURE__*/_jsxs(\"div\",{className:\"obs-filter form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\".concat(props.column.name,\"-bs-select\"),children:props.column.label}),/*#__PURE__*/_jsx(MultiSelect,{options:options,value:selected,onChange:setSelected,labelledBy:\"Select\"})]},props.column.name);};export default FilterDropDown;export function setFilterFormSelected(field,selected){const selected_array=selected.map(opt=>opt.value);const payload={field:field,selected:selected_array};return\"\";}export function obs_filters_set(){\"entered filters reducer\";let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let action=arguments.length>1?arguments[1]:undefined;let copiedState=Object.assign({},state);copiedState[action.payload.field]=action.payload.selected;return copiedState;}","map":{"version":3,"names":["React","useState","useEffect","MultiSelect","jsx","_jsx","jsxs","_jsxs","FilterDropDown","props","options","setOptions","selected","setSelected","column_name","column","name","curr_options","options_array","items","map","item","Set","new_options","opt","label","value","console","log","length","selected_array","filterSet","setFilterSet","className","children","htmlFor","concat","onChange","labelledBy","setFilterFormSelected","field","payload","obs_filters_set","state","arguments","undefined","action","copiedState","Object","assign"],"sources":["C:/Users/Phil Work/Documents/Coding Projects HD/ProcorePython/frontend/src/issues/Table/toolbar/FilterDropDown.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\n\n\nconst FilterDropDown = (props) => {\n  const [options, setOptions] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const column_name = props.column.name\n\n  useEffect(() => {\n    const curr_options = options\n    let options_array = props.items.map((item) => item[column_name]);\n    options_array = [...new Set(options_array)];\n    const new_options = options_array.map((opt) => ({\n      label: opt,\n      value: opt,\n    }));\n    setOptions(new_options);\n    console.log(\"if selected all\")\n    console.log(selected)\n    console.log(curr_options)\n    if(props.items.length===0 || new Set(selected) === new Set(curr_options)){\n      setSelected(new_options)\n    }\n  }, [props.items]);\n\n  useEffect(() => {\n    const selected_array = selected.map((opt) => opt.value);\n    const filterSet = {...props.filterSet}\n    filterSet[column_name] = selected_array\n    props.setFilterSet(filterSet)\n  }, [selected]);\n\n  return (\n    <div key={props.column.name} className=\"obs-filter form-group\">\n      <label htmlFor={`${props.column.name}-bs-select`}>{props.column.label}</label>\n      {/* <select className='form-control' multiple id={`${column.name}-bs-select`} data-actions-box=\"true\" name={column.name}>\n      { options.map((opt) => <option value={opt}>{opt}</option>) }\n      </select> */}\n      <MultiSelect\n        options={options}\n        value={selected}\n        onChange={setSelected}\n        labelledBy=\"Select\"\n      />\n    </div>\n  );\n};\n\n\nexport default FilterDropDown\n\n\nexport function setFilterFormSelected(field, selected) {\n  const selected_array = selected.map((opt) => opt.value);\n  const payload = { field: field, selected: selected_array };\n\n  return \"\"\n}\n\nexport function obs_filters_set(state = null, action) {\n    \"entered filters reducer\";\n    let copiedState = Object.assign({}, state);\n    copiedState[action.payload.field] = action.payload.selected;\n    return copiedState;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}