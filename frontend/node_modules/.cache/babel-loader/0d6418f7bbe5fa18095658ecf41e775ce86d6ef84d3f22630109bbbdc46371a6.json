{"ast":null,"code":"import React from \"react\";\nexport function format_date(date_string) {\n  const d = new Date(date_string);\n  return d.toISOString().split(\"T\")[0];\n}\nexport function sort_by_column(observations, column_name, if_desc) {\n  const dir = if_desc ? [-1, 1] : [1, -1];\n  let obs_array = [];\n  observations.forEach(obs => {\n    obs_array.push({\n      field: obs[column_name],\n      obj: obs\n    });\n  });\n  obs_array.sort((a, b) => a.field > b.field ? dir[0] : b.field > a.field ? dir[1] : 0);\n  let new_observations = [];\n  obs_array.forEach(el => new_observations.push(el.obj));\n  return new_observations;\n}\nexport function sort_array(array, field, if_desc) {\n  const dir = if_desc ? [-1, 1] : [1, -1];\n  return array.sort((a, b) => a[field] > b[field] ? dir[0] : b[field] > a[field] ? dir[1] : 0);\n}\nexport function shorten_url(name_string) {\n  if (name_string.length > 23) {\n    return name_string.slice(0, 20) + \"...\" + name_string.slice(-5);\n  } else {\n    return name_string;\n  }\n}\nexport function standardizeFontSize(BodyText) {\n  let newBodyText;\n  const re = new RegExp(\"font-size:.*;\", \"g\");\n  const re2 = new RegExp(\"font-family:.*;\", \"g\");\n  newBodyText = BodyText ? BodyText.replaceAll(re, \"\") : \"\";\n  newBodyText = BodyText ? BodyText.replaceAll(re2, \"\") : \"\";\n  return newBodyText;\n}\nexport function openLink(url) {\n  const headers = {\n    'Authorization': \"Bearer #{procore_token['access_token']}\",\n    'Procore-Company-Id': '562949953436954'\n  };\n  const request = new Request(url, {\n    headers: headers\n  });\n  const newTab = window.open('', '_blank');\n  fetch(request).then(response => response.text()).then(data => {\n    // Handle the response data\n    newTab.document.write(data);\n  }).catch(error => {\n    // Handle any errors\n    console.error('Error:', error);\n  });\n}\nexport function checkObs(obs, filters) {\n  // return Object.entries(filters).every(([field, filter])=>checkObsOneFilter(filter, obs[field]))\n  console.log(\"checking obs\");\n  Object.keys(filters).forEach(field => {\n    console.log(field);\n    console.log(obs[field]);\n    console.log(filters[field]);\n    console.log(filters[field].includes(obs[field]));\n  });\n  console.log(Object.keys(filters).every(field => filters[field].includes(obs[field])));\n  return Object.keys(filters).every(field => filters[field].includes(obs[field]));\n}\nexport function statusColor(cellContent) {\n  switch (cellContent.toLowerCase()) {\n    case \"closed\":\n      return \"green\";\n    case \"ready_for_review\":\n      return \"blue\";\n    case \"initiated\":\n      return \"darkred\";\n    default:\n      return \"\";\n  }\n}","map":{"version":3,"names":["React","format_date","date_string","d","Date","toISOString","split","sort_by_column","observations","column_name","if_desc","dir","obs_array","forEach","obs","push","field","obj","sort","a","b","new_observations","el","sort_array","array","shorten_url","name_string","length","slice","standardizeFontSize","BodyText","newBodyText","re","RegExp","re2","replaceAll","openLink","url","headers","request","Request","newTab","window","open","fetch","then","response","text","data","document","write","catch","error","console","checkObs","filters","log","Object","keys","includes","every","statusColor","cellContent","toLowerCase"],"sources":["C:/Users/Phil Work/Documents/Coding Projects HD/ProcorePython/frontend/src/shared/functions.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport function format_date(date_string) {\r\n  const d = new Date(date_string);\r\n  return d.toISOString().split(\"T\")[0];\r\n}\r\n\r\nexport function sort_by_column(observations, column_name, if_desc) {\r\n  const dir = if_desc ? [-1, 1] : [1, -1];\r\n  let obs_array = [];\r\n  observations.forEach((obs) => {\r\n    obs_array.push({ field: obs[column_name], obj: obs });\r\n  });\r\n  obs_array.sort((a, b) =>\r\n    a.field > b.field ? dir[0] : b.field > a.field ? dir[1] : 0\r\n  );\r\n  let new_observations = [];\r\n  obs_array.forEach((el) => new_observations.push(el.obj));\r\n  return new_observations;\r\n}\r\n\r\nexport function sort_array(array, field, if_desc) {\r\n  const dir = if_desc ? [-1, 1] : [1, -1];\r\n  return array.sort((a, b) =>\r\n    a[field] > b[field] ? dir[0] : b[field] > a[field] ? dir[1] : 0\r\n  );\r\n}\r\n\r\nexport function shorten_url(name_string) {\r\n  if (name_string.length > 23) {\r\n    return name_string.slice(0, 20) + \"...\" + name_string.slice(-5);\r\n  } else {\r\n    return name_string;\r\n  }\r\n}\r\n\r\nexport function standardizeFontSize(BodyText) {\r\n  let newBodyText;\r\n  const re = new RegExp(\"font-size:.*;\", \"g\");\r\n  const re2 = new RegExp(\"font-family:.*;\", \"g\");\r\n  newBodyText = BodyText ? BodyText.replaceAll(re, \"\") : \"\";\r\n  newBodyText = BodyText ? BodyText.replaceAll(re2, \"\") : \"\";\r\n  return newBodyText\r\n}\r\n\r\nexport function openLink(url) {\r\n  const headers = { 'Authorization' : \"Bearer #{procore_token['access_token']}\", 'Procore-Company-Id' : '562949953436954'  }\r\n  const request = new Request(url, { headers: headers });\r\n  const newTab = window.open('', '_blank');\r\n  fetch(request)\r\n  .then(response => response.text())\r\n  .then(data => {\r\n    // Handle the response data\r\n    newTab.document.write(data);\r\n  })\r\n  .catch(error => {\r\n    // Handle any errors\r\n    console.error('Error:', error);\r\n  });\r\n}\r\n\r\nexport function checkObs(obs, filters) {\r\n  // return Object.entries(filters).every(([field, filter])=>checkObsOneFilter(filter, obs[field]))\r\n  console.log(\"checking obs\");\r\n  Object.keys(filters).forEach((field) => {\r\n    console.log(field);\r\n    console.log(obs[field]);\r\n    console.log(filters[field]);\r\n    console.log(filters[field].includes(obs[field]));\r\n  });\r\n  console.log(\r\n    Object.keys(filters).every((field) => filters[field].includes(obs[field]))\r\n  );\r\n  return Object.keys(filters).every((field) =>\r\n    filters[field].includes(obs[field])\r\n  );\r\n}\r\n\r\nexport function statusColor(cellContent) {\r\n  switch (cellContent.toLowerCase()) {\r\n    case \"closed\":\r\n      return \"green\";\r\n    case \"ready_for_review\":\r\n      return \"blue\";\r\n    case \"initiated\":\r\n      return \"darkred\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}