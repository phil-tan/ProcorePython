{"ast":null,"code":"import React,{useEffect,useState}from'react';import NavBar from'../shared/NavBar';import withRouter from'../shared/withRouter';import SortableTable from'../projects/SortableTable';import'./issues.css';import LoadingSpinner from'../shared/LoadingSpinner';import List from'./Table/List';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const IssuesPage=props=>{const[project,setProject]=useState({});const[issues,setIssues]=useState([]);const[issuesOptions,setIssuesOptions]=useState({'assignees':[],'locations':[],'types':[],'trades':[]});const[loading,setLoading]=useState(true);const[changedIssue,setChangedIssue]=useState({});useEffect(()=>{fetch(\"/api/projects/\".concat(props.params.project_id)).then(r=>r.json()).then(data=>setProject(data));fetch(\"/api/projects/\".concat(props.params.project_id,\"/issues\")).then(r=>r.json()).then(data=>setIssues(data)).then(setLoading(false));fetch(\"/api/projects/\".concat(props.params.project_id,\"/issues/fields\")).then(r=>r.json()).then(data=>setIssuesOptions(data));},[]);useEffect(()=>{if(!issues.some(item=>item.id===changedIssue.id)){const issues_list=[changedIssue,...issues];setIssues(issues_list);}else{setIssues(issues.map(item=>item.id===changedIssue.id?changedIssue:item));}},[changedIssue]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"obs-page\",children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"nav nav-pills mt-1\",children:[/*#__PURE__*/_jsx(\"a\",{className:\"nav-link\",type:\"button\",href:\"/projects/\".concat(props.params.project_id,\"/insp_app/insp\"),children:\"Inspections\"}),/*#__PURE__*/_jsx(\"a\",{className:\"nav-link active\",target:\"_blank\",type:\"button\",children:\"Observations\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-end mb-2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar row gx-1 mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-9\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end\"}),/*#__PURE__*/_jsx(List,{project:project,items:issues,itemFieldOptions:issuesOptions})]})]});};export default withRouter(IssuesPage);","map":{"version":3,"names":["React","useEffect","useState","NavBar","withRouter","SortableTable","LoadingSpinner","List","jsx","_jsx","jsxs","_jsxs","IssuesPage","props","project","setProject","issues","setIssues","issuesOptions","setIssuesOptions","loading","setLoading","changedIssue","setChangedIssue","fetch","concat","params","project_id","then","r","json","data","some","item","id","issues_list","map","children","className","type","href","target","items","itemFieldOptions"],"sources":["C:/Users/Phil Work/Documents/Coding Projects HD/ProcorePython/frontend/src/issues/IssuesPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NavBar from '../shared/NavBar';\r\nimport withRouter from '../shared/withRouter';\r\nimport SortableTable from '../projects/SortableTable';\r\nimport './issues.css';\r\nimport LoadingSpinner from '../shared/LoadingSpinner'\r\nimport List from './Table/List';\r\n\r\n\r\nconst IssuesPage = (props) => {\r\n   const [project, setProject] = useState({})\r\n   const [issues, setIssues] = useState([]);\r\n   const [issuesOptions, setIssuesOptions] = useState({'assignees':[], 'locations':[], 'types':[], 'trades':[]  })\r\n   const [loading, setLoading] = useState(true)\r\n   const [changedIssue, setChangedIssue] = useState({})\r\n   \r\n   useEffect(() => {\r\n      fetch(`/api/projects/${props.params.project_id}`).then((r)=>r.json()).then((data)=>setProject(data))\r\n      fetch(`/api/projects/${props.params.project_id}/issues`).then((r)=>r.json()\r\n                    ).then((data)=>setIssues(data)).then(setLoading(false))\r\n      fetch(`/api/projects/${props.params.project_id}/issues/fields`).then((r)=>r.json()).then((data)=>setIssuesOptions(data))\r\n   }, []);\r\n\r\n   useEffect(()=>{\r\n      if(!issues.some(item => item.id === changedIssue.id)){\r\n        const issues_list = [changedIssue, ...issues]\r\n        setIssues(issues_list)\r\n      }else{\r\n        setIssues(issues.map(item => item.id === changedIssue.id ? changedIssue : item))\r\n      }\r\n  \r\n   },[changedIssue])\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"obs-page\">\r\n      <nav className=\"nav nav-pills mt-1\">\r\n        <a\r\n          className={`nav-link`}\r\n          type=\"button\"\r\n          href={`/projects/${props.params.project_id}/insp_app/insp`}\r\n        >\r\n          Inspections\r\n        </a>\r\n        <a className={`nav-link active`} target=\"_blank\" type=\"button\">\r\n          Observations\r\n        </a>\r\n      </nav>\r\n\r\n      <div className=\"text-end mb-2\">\r\n      {/* <ObsPDFDownloadLink /> */}\r\n      </div>\r\n      <div className=\"toolbar row gx-1 mb-2\">\r\n      <div className=\"col-3\">\r\n         {/* <ColumnCheckBoxForm columns={props.obs_columns} /> */}\r\n      </div>\r\n      <div className=\"col-9\">\r\n         {/* <FilterForm\r\n            columns={props.obs_columns.filter((col) => col.filterable)}\r\n         /> */}\r\n      </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-end\">\r\n      {/* {props.create_loading ? <span>Creating Item...<span className=\"spinner-grow text-primary\"></span></span> : <></>} */}\r\n      </div>\r\n\r\n      <List project={project} items={issues} itemFieldOptions={issuesOptions}/>\r\n\r\n    </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(IssuesPage);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}