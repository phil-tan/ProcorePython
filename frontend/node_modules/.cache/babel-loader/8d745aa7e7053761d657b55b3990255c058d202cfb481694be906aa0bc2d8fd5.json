{"ast":null,"code":"import React from\"react\";import TableRow from\"./TableRow\";import withRouter from\"../../shared/withRouter\";// import TableColumnHead from \"./TableColumnHead\";\nimport{table_columns}from\"./columns\";import{useState,useEffect}from\"react\";import'../issues.css';//Table columns\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TableSection=props=>{const[showItems,setShowItems]=useState([]);console.log(props.items);return/*#__PURE__*/_jsx(_Fragment,{children:props.items.length>0?/*#__PURE__*/_jsxs(\"table\",{className:\"obs-table table\",children:[/*#__PURE__*/_jsx(TableHeaderRow,{columns:props.columns}),/*#__PURE__*/_jsx(\"tbody\",{children:props.items.map(item=>{return/*#__PURE__*/_jsx(TableRow,{columns:props.columns,item:item,show_photos:false},item.id);})})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h5\",{children:\"No items to show \"})]})});};export default withRouter(TableSection);const TableHeaderRow=props=>{const[if_desc,setSortDesc]=useState(true);const headerClick=e=>{setSortDesc(!if_desc);// props.sort_column(props.obs_filtered, e.target.id, if_desc);\n};console.log(props.columns);return/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{id:\"obs-header-row\",className:\"obs-header-row\",children:props.columns.map(col=>/*#__PURE__*/_jsx(\"th\",{scope:\"col\",style:{width:col?col.width:\"\"},className:col?col.className:\"\",children:/*#__PURE__*/_jsx(\"div\",{id:col?col.name:\"\",onClick:headerClick,children:col?col.label:\"\"})}))},\"header\")});};{/* <div id=\"obs-log\" >\n<h3>\n  <strong>{Object.keys(project).length > 0 ? `${project.name} - Issues Log`:  ''}</strong>\n</h3>\n<p>\n  <strong>Date Printed: </strong>\n  {`${new Date()}`}\n</p>\n{loading ? (\n  <LoadingSpinner />\n) : (\n   <table className=\"table table-striped\">\n   <thead className=\"table-dark\">\n     <tr>\n       <th scope=\"col\">Project</th>\n       <th scope=\"col\">Name</th>\n       <th scope=\"col\">Issues</th>\n       <th scope=\"col\">Address</th>\n       <th scope=\"col\">Start</th>\n       <th scope=\"col\">Completion</th>\n       <th scope=\"col\">Company</th>\n     </tr>\n   </thead>\n   <tbody>\n   {issues.map((issue)=>\n     <tr>\n       <td>{issue[\"number\"]}</td>\n       <td>{issue[\"item_date\"]}</td>\n       <td>{issue[\"name\"]}</td>\n       <td>{issue[\"description\"]}</td>\n       <td>placeholder</td>\n       <td>{issue[\"action_by\"]}</td>\n       <td>{issue[\"status\"]}</td>\n     </tr>\n )}\n   </tbody>\n </table>\n)}\n</div> */}","map":{"version":3,"names":["React","TableRow","withRouter","table_columns","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TableSection","props","showItems","setShowItems","console","log","items","children","length","className","TableHeaderRow","columns","map","item","show_photos","id","if_desc","setSortDesc","headerClick","e","col","scope","style","width","name","onClick","label"],"sources":["C:/Users/Phil Work/Documents/Coding Projects HD/ProcorePython/frontend/src/issues/Table/TableSection.jsx"],"sourcesContent":["import React from \"react\";\nimport TableRow from \"./TableRow\";\nimport withRouter from \"../../shared/withRouter\";\n// import TableColumnHead from \"./TableColumnHead\";\nimport { table_columns } from \"./columns\";\nimport { useState, useEffect } from \"react\";\nimport '../issues.css'\n\n//Table columns\n\n\nconst TableSection = (props) => {\n  const [showItems, setShowItems] = useState([])\n  console.log(props.items)\n\n  return (\n    <>\n      {props.items.length > 0 ? (\n        <table className=\"obs-table table\">\n        <TableHeaderRow columns={props.columns} />\n          <tbody>\n            {props.items.map((item) => {\n              return (\n                <TableRow columns={props.columns} key={item.id} item={item} show_photos={false}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      ) : (\n        <div>\n          <hr></hr>\n          <h5>No items to show </h5>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default withRouter((TableSection));\n\n\nconst TableHeaderRow = (props) => {\n  const [if_desc, setSortDesc] = useState(true);\n\n  const headerClick = (e) => {\n    setSortDesc(!if_desc);\n    // props.sort_column(props.obs_filtered, e.target.id, if_desc);\n  };\n  console.log(props.columns)\n\n  return (\n    <thead>\n      <tr id=\"obs-header-row\" className=\"obs-header-row\" key=\"header\">\n      {props.columns.map((col) => (\n      <th\n        scope=\"col\"\n        style={{ width: col ? col.width : \"\" }}\n        className={col ? col.className : \"\"}\n      >\n        <div id={col ? col.name : \"\"} onClick={headerClick}>\n          {col ? col.label : \"\"}\n        </div>\n      </th>\n      ))}\n      </tr>\n    </thead>\n  );\n};\n\n{/* <div id=\"obs-log\" >\n<h3>\n  <strong>{Object.keys(project).length > 0 ? `${project.name} - Issues Log`:  ''}</strong>\n</h3>\n<p>\n  <strong>Date Printed: </strong>\n  {`${new Date()}`}\n</p>\n{loading ? (\n  <LoadingSpinner />\n) : (\n   <table className=\"table table-striped\">\n   <thead className=\"table-dark\">\n     <tr>\n       <th scope=\"col\">Project</th>\n       <th scope=\"col\">Name</th>\n       <th scope=\"col\">Issues</th>\n       <th scope=\"col\">Address</th>\n       <th scope=\"col\">Start</th>\n       <th scope=\"col\">Completion</th>\n       <th scope=\"col\">Company</th>\n     </tr>\n   </thead>\n   <tbody>\n   {issues.map((issue)=>\n     <tr>\n       <td>{issue[\"number\"]}</td>\n       <td>{issue[\"item_date\"]}</td>\n       <td>{issue[\"name\"]}</td>\n       <td>{issue[\"description\"]}</td>\n       <td>placeholder</td>\n       <td>{issue[\"action_by\"]}</td>\n       <td>{issue[\"status\"]}</td>\n     </tr>\n )}\n   </tbody>\n </table>\n)}\n</div> */}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD;AACA,OAASC,aAAa,KAAQ,WAAW,CACzC,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,eAAe,CAEtB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAGA,KAAM,CAAAC,YAAY,CAAIC,KAAK,EAAK,CAC9B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC9CY,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACK,KAAK,CAAC,CAExB,mBACEX,IAAA,CAAAI,SAAA,EAAAQ,QAAA,CACGN,KAAK,CAACK,KAAK,CAACE,MAAM,CAAG,CAAC,cACrBX,KAAA,UAAOY,SAAS,CAAC,iBAAiB,CAAAF,QAAA,eAClCZ,IAAA,CAACe,cAAc,EAACC,OAAO,CAAEV,KAAK,CAACU,OAAQ,CAAE,CAAC,cACxChB,IAAA,UAAAY,QAAA,CACGN,KAAK,CAACK,KAAK,CAACM,GAAG,CAAEC,IAAI,EAAK,CACzB,mBACElB,IAAA,CAACN,QAAQ,EAACsB,OAAO,CAAEV,KAAK,CAACU,OAAQ,CAAeE,IAAI,CAAEA,IAAK,CAACC,WAAW,CAAE,KAAM,EAAxCD,IAAI,CAACE,EAC3C,CAAC,CAEN,CAAC,CAAC,CACG,CAAC,EACH,CAAC,cAERlB,KAAA,QAAAU,QAAA,eACEZ,IAAA,QAAQ,CAAC,cACTA,IAAA,OAAAY,QAAA,CAAI,mBAAiB,CAAI,CAAC,EACvB,CACN,CACD,CAAC,CAEP,CAAC,CAED,cAAe,CAAAjB,UAAU,CAAEU,YAAa,CAAC,CAGzC,KAAM,CAAAU,cAAc,CAAIT,KAAK,EAAK,CAChC,KAAM,CAACe,OAAO,CAAEC,WAAW,CAAC,CAAGzB,QAAQ,CAAC,IAAI,CAAC,CAE7C,KAAM,CAAA0B,WAAW,CAAIC,CAAC,EAAK,CACzBF,WAAW,CAAC,CAACD,OAAO,CAAC,CACrB;AACF,CAAC,CACDZ,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACU,OAAO,CAAC,CAE1B,mBACEhB,IAAA,UAAAY,QAAA,cACEZ,IAAA,OAAIoB,EAAE,CAAC,gBAAgB,CAACN,SAAS,CAAC,gBAAgB,CAAAF,QAAA,CACjDN,KAAK,CAACU,OAAO,CAACC,GAAG,CAAEQ,GAAG,eACvBzB,IAAA,OACE0B,KAAK,CAAC,KAAK,CACXC,KAAK,CAAE,CAAEC,KAAK,CAAEH,GAAG,CAAGA,GAAG,CAACG,KAAK,CAAG,EAAG,CAAE,CACvCd,SAAS,CAAEW,GAAG,CAAGA,GAAG,CAACX,SAAS,CAAG,EAAG,CAAAF,QAAA,cAEpCZ,IAAA,QAAKoB,EAAE,CAAEK,GAAG,CAAGA,GAAG,CAACI,IAAI,CAAG,EAAG,CAACC,OAAO,CAAEP,WAAY,CAAAX,QAAA,CAChDa,GAAG,CAAGA,GAAG,CAACM,KAAK,CAAG,EAAE,CAClB,CAAC,CACJ,CACH,CAAC,EAXqD,QAYnD,CAAC,CACA,CAAC,CAEZ,CAAC,CAED,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAtCC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}